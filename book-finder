import { useState } from "react";

export default function App() {
  const [query, setQuery] = useState("");
  const [books, setBooks] = useState([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState("");

  const fetchBooks = async () => {
    if (!query) return;
    setLoading(true);
    setError("");
    try {
      const res = await fetch(`https://openlibrary.org/search.json?q=${query}`);
      const data = await res.json();
      setBooks(data.docs || []);
    } catch (err) {
      setError("Failed to fetch data.");
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="p-6 text-center font-sans">
      <h1 className="text-3xl font-bold mb-6">ðŸ“š Book Finder</h1>
      <div className="flex justify-center mb-4">
        <input
          value={query}
          onChange={(e) => setQuery(e.target.value)}
          placeholder="Search by title, author, or subject"
          className="border p-2 w-1/2 rounded-l"
        />
        <button onClick={fetchBooks} className="bg-blue-500 text-white px-4 rounded-r">
          Search
        </button>
      </div>

      {loading && <p>Loading...</p>}
      {error && <p className="text-red-500">{error}</p>}

      <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4 mt-4">
        {books.slice(0, 12).map((book, idx) => (
          <div key={idx} className="border rounded p-3 text-left shadow">
            {book.cover_i ? (
              <img
                src={`https://covers.openlibrary.org/b/id/${book.cover_i}-M.jpg`}
                alt={book.title}
                className="w-full h-60 object-cover mb-2 rounded"
              />
            ) : (
              <div className="w-full h-60 bg-gray-200 mb-2 rounded" />
            )}
            <h2 className="font-bold text-lg">{book.title}</h2>
            <p className="text-sm text-gray-700">
              {book.author_name ? book.author_name.join(", ") : "Unknown Author"}
            </p>
            <p className="text-sm text-gray-500">
              {book.first_publish_year ? `First published: ${book.first_publish_year}` : ""}
            </p>
          </div>
        ))}
      </div>
    </div>
  );
}
